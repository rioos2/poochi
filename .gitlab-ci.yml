variables:
  NODE_ENV: "test"
  SIMPLECOV: "true"
  GIT_DEPTH: "20"
  HOME: /home/gitlab-runner
  RIOOS_HOME: /var/lib/rioos/
  RIO_BUILD_HOME: $HOME/$CI_PROJECT_DIR
  RIO_BOOTSTRAP_PATH: ${RIO_BUILD_HOME}/rio_bootstrap
  RIO_NETWORK_PATH: ${RIO_BUILD_HOME}/rio_network
  RIO_NODELET_PATH: ${RIO_BUILD_HOME}/rio_nodelet
  RIO_NODELET_GOPATH: ${RIO_NODELET_PATH}/build/aventura/rioos_nodelet
  RIO_STORELET_PATH: ${RIO_BUILD_HOME}/rio_storlet
  RIO_STORELET_GOPATH: ${RIO_STORELET_PATH}/build/aventura/rioos_storlet
  RIO_COMMOM_PATH: ${RIO_BUILD_HOME}/rio_common
  RIO_CONTROLLER_PATH: ${RIO_BUILD_HOME}/rio_cotroller
  RIO_CONTROLLER_GOPATH: ${RIO_STORELET_PATH}/build/docker/rioos_controller
  RIO_SCHEDULER_PATH: ${RIO_BUILD_HOME}/rio_scheduler
  RIO_SCHEDULER_GOPATH: ${RIO_STORELET_PATH}/build/docker/rioos_scheduler
  RIO_GULPD_PATH: ${RIO_BUILD_HOME}/rio_gulpd
  RIO_PROMETHEUS_PATH: ${RIO_BUILD_HOME}/marketplaces/prometheus
  RIO_PROMETHEUS_GOPATH: ${RIO_PROMETHEUS_PATH}/build/docker/rioos_prometheus
  RIO_VNC_PATH: ${RIO_BUILD_HOME}/rio_vnc
  RIO_NILAVU_PATH: ${RIO_BUILD_HOME}/rio_nilavu
  RIO_RUST_API_PATH: ${RIO_BUILD_HOME}/rio_api
  RIO_RUST_BLOCKCHAIN_PATH: ${RIO_BUILD_HOME}/rio_blockchain
  RIO_RUST_MARKETPLACE_PATH: ${RIO_BUILD_HOME}/rio_marketplace
  RIO_RUST_CLI_PATH: ${RIO_BUILD_HOME}/rio_cli
  RIO_POWERDNS_PATH: ${RIO_BUILD_HOME}/rio_powerdns
  RIO_FLUENTBIT_PATH: ${RIO_BUILD_HOME}/rio_fluentbit
  RIO_ISO_PATH: ${RIO_BUILD_HOME}/rio_iso
  RIO_ISO_PARENT_DIR_ID: "13bmiH9Gi7fqbzDLaKT4B5lxleyd2HgMP"
  RIO_MARKETPLACE_PATH: ${RIO_BUILD_HOME}/marketplaces

before_script:
  - export CARGO_HOME=$HOME
  - export PATH="$PATH:$HOME/software/go/bin:$HOME/software/node/bin:$HOME/.go/bin:$CARGO_HOME/.cargo/bin:$HOME/.yarn/bin"
  - bundle --version
  - rake --version
  - ruby --version
  - go version
  - node -v
  - rustc -V
  - docker -v
  - github-release -V
  - gdrive version
  - date

after_script:
  - date

stages:
  - build
  - buildimages
  - buildiso
  - buildriomarket
  - shipiso
  - shipriomarket
  - ship
  - post-cleanup

rio_common:
  stage: build
  artifacts:
    untracked: true
  script:
    - cd rio_common
    - rake clean
    - rake aventura
  allow_failure: true

rio_network:
  stage: build
  artifacts:
    untracked: true
  script:
    - cd rio_network
    - rake clean
    - rake aventura
  allow_failure: true

rio_bootstrap:
  stage: build
  artifacts:
    untracked: true
  script:
    - cd rio_bootstrap
    - rake clean
    - rake aventura
  allow_failure: true

rio_storlet:
  stage: build
  artifacts:
    untracked: true
  script:
    - export GOPATH=$RIO_STORELET_GOPATH
    - cd rio_storlet
    - rake clean
    - rake aventura
  allow_failure: true

rio_nodelet:
  stage: build
  artifacts:
    untracked: true
  script:
    - export GOPATH=$RIO_NODELET_GOPATH
    - cd rio_nodelet
    - rake clean
    - rake aventura
  allow_failure: true

rio_console:
  stage: build
  artifacts:
    untracked: true
  script:
    - cd rio_vnc
    - rake clean
    - rake aventura
  allow_failure: true

rio_controller:
  stage: buildimages
  artifacts:
    untracked: true
  script:
    - export GOPATH=$RIO_CONTROLLER_GOPATH
    - cd rio_controller
    - rake clean
    - rake docker
  allow_failure: true

rio_scheduler:
  stage: buildimages
  artifacts:
    untracked: true
  script:
    - export GOPATH=$RIO_SCHEDULER_GOPATH
    - cd rio_scheduler
    - rake clean
    - rake docker
  allow_failure: true

rio_prometheus:
  stage: buildimages
  artifacts:
    untracked: true
  script:
    - export GOPATH=${RIO_PROMETHEUS_GOPATH}
    - cd rio_prometheus
    - rake clean
    - rake docker
  allow_failure: true

rio_api:
  stage: buildimages
  artifacts:
    untracked: true
  script:
    - export RIOOS_HOME=${RIOOS_HOME}
    - mkdir -p ${RIOOS_HOME}
    - cd rio_api
    - rake clean
    - rake docker
  allow_failure: true

rio_blockchain:
  stage: buildimages
  artifacts:
    untracked: true
  script:
    - export RIOOS_HOME=${RIOOS_HOME}
    - mkdir -p ${RIOOS_HOME}
    - cd rio_blockchain
    - rake clean
    - rake docker
  allow_failure: true

rio_marketplace:
  stage: buildimages
  artifacts:
    untracked: true
  script:
    - export RIOOS_HOME=${RIOOS_HOME}
    - mkdir -p ${RIOOS_HOME}
    - cd rio_marketplace
    - rake clean
    - rake docker
  allow_failure: true

rio_cli:
  stage: buildimages
  script:
    - export RIOOS_HOME=${RIOOS_HOME}
    - mkdir -p ${RIOOS_HOME}
    - cd rio_cli
    - rake clean
    - rake xenial
  allow_failure: true


rio_nilavu:
  stage: buildimages
  artifacts:
    untracked: true
  script:
    - cd rio_nilavu
    - rake clean
    - rake docker
  allow_failure: true

# rio_iso:
#   stage: buildiso
#   script:
#     - cd rio_iso
#     - echo $RIO_ISO_PATH
#     - sudo make clean
#     - sudo make aventura
#     - gdrive upload --parent $RIO_ISO_PARENT_DIR_ID build/rioos.iso
#   allow_failure: true


rio_ship:
  stage: ship
  dependencies:
    - rio_common
    - rio_network
    - rio_bootstrap
    - rio_storlet
    - rio_nodelet
    - rio_console
    - rio_controller
    - rio_scheduler
    - rio_prometheus
    - rio_api
    - rio_blockchain
    - rio_marketplace
    - rio_nilavu
  script:
    - sudo rake ship:clean
    - sudo rake ship:aventura
  allow_failure: true
